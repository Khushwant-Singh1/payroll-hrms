generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id            String         @id @default(cuid())
  employeeId    String         @unique
  name          String
  email         String         @unique
  phone         String
  department    String
  designation   String
  company       String
  location      String?
  grade         String?
  status        EmployeeStatus @default(active)
  joiningDate   DateTime
  dateOfBirth   DateTime?
  basicSalary   Decimal        @db.Decimal(12, 2)
  hra           Decimal        @db.Decimal(12, 2)
  allowances    Decimal        @db.Decimal(12, 2)
  pan           String?
  aadhaar       String?
  uan           String?
  esicNumber    String?
  pfOptIn       Boolean        @default(true)
  esiApplicable Boolean        @default(true)
  lwfState      String?
  bankAccount   String?
  ifsc          String?
  branch        String?
  profilePic    String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model EmployeeDraft {
  id            String         @id @default(cuid())
  employeeId    String?        // Optional as it might be empty in draft
  name          String?
  email         String?
  phone         String?
  department    String?
  designation   String?
  company       String?
  location      String?
  grade         String?
  status        EmployeeStatus @default(active)
  joiningDate   String?        // Store as string in draft to allow incomplete dates
  dateOfBirth   String?
  basicSalary   Decimal?       @db.Decimal(12, 2)
  hra           Decimal?       @db.Decimal(12, 2)
  allowances    Decimal?       @db.Decimal(12, 2)
  pan           String?
  aadhaar       String?
  uan           String?
  esicNumber    String?
  pfOptIn       Boolean        @default(true)
  esiApplicable Boolean        @default(true)
  lwfState      String?
  bankAccount   String?
  ifsc          String?
  branch        String?
  profilePic    String?
  createdBy     String?        // To track who created the draft
  lastModified  DateTime       @default(now()) @updatedAt
  createdAt     DateTime       @default(now())
  
  @@map("employee_drafts")
}

model StatutoryReturn {
  id          String   @id @default(cuid())
  title       String
  generatedAt DateTime @default(now())
  data        Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum EmployeeStatus {
  active
  inactive
}
