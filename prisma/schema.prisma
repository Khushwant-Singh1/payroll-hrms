// ── existing generator & datasource ──
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ── existing Employee & EmployeeDraft ──
model Employee {
  id            String         @id @default(cuid())
  employeeId    String         @unique
  name          String
  email         String         @unique
  phone         String
  department    String
  designation   String
  company       String
  location      String?
  grade         String?
  status        EmployeeStatus @default(active)
  joiningDate   DateTime
  dateOfBirth   DateTime?
  basicSalary   Decimal        @db.Decimal(12, 2)
  hra           Decimal        @db.Decimal(12, 2)
  allowances    Decimal        @db.Decimal(12, 2)
  pan           String?
  aadhaar       String?
  uan           String?
  esicNumber    String?
  pfOptIn       Boolean        @default(true)
  esiApplicable Boolean        @default(true)
  lwfState      String?
  bankAccount   String?
  ifsc          String?
  branch        String?
  profilePic    String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // ── NEW RELATION ──
  attendance    Attendance[]
}

model EmployeeDraft {
  id            String         @id @default(cuid())
  employeeId    String?
  name          String?
  email         String?
  phone         String?
  department    String?
  designation   String?
  company       String?
  location      String?
  grade         String?
  status        EmployeeStatus @default(active)
  joiningDate   String?
  dateOfBirth   String?
  basicSalary   Decimal?       @db.Decimal(12, 2)
  hra           Decimal?       @db.Decimal(12, 2)
  allowances    Decimal?       @db.Decimal(12, 2)
  pan           String?
  aadhaar       String?
  uan           String?
  esicNumber    String?
  pfOptIn       Boolean        @default(true)
  esiApplicable Boolean        @default(true)
  lwfState      String?
  bankAccount   String?
  ifsc          String?
  branch        String?
  profilePic    String?
  createdBy     String?
  lastModified  DateTime       @default(now()) @updatedAt
  createdAt     DateTime       @default(now())

  @@map("employee_drafts")
}

model StatutoryReturn {
  id          String   @id @default(cuid())
  title       String
  generatedAt DateTime @default(now())
  data        Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// ── NEW ATTENDANCE MODEL ──
model Attendance {
  id             String   @id @default(cuid())
  employeeId     String
  month          String   // e.g. "January"
  year           Int
  presentDays    Int
  totalDays      Int
  overtimeHours  Decimal  @db.Decimal(5, 2) // 999.99 max
  leavesTaken    Int
  shiftAllowance Decimal  @db.Decimal(12, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employee Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

// ── existing enum ──
enum EmployeeStatus {
  active
  inactive
}